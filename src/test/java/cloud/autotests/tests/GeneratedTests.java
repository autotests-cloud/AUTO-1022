package cloud.autotests.tests;

import cloud.autotests.helpers.DriverUtils;
import io.qameta.allure.Description;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static com.codeborne.selenide.Selenide.open;
import static com.codeborne.selenide.Selenide.title;
import static io.qameta.allure.Allure.step;
import static org.assertj.core.api.Assertions.assertThat;


public class GeneratedTests extends TestBase {
    @Test
    @Description("Soon to be implemented by you (or QA.GURU engineers)")
    @DisplayName("testsRabotaRu")
    void generatedTest() {
        step("Open 'https://eburg.rabota.ru/passport/sign-up/'", () -> {
            step("// todo: just add selenium action");
        });

        step("set username 'test'", () -> {
            step("// todo: just add selenium action");
        });

        step("set birthday '2000'", () -> {
            step("// todo: just add selenium action");
        });

        step("set vacancy 'tester'", () -> {
            step("// todo: just add selenium action");
        });

        step("set email 'qa01234@mail.ru'", () -> {
            step("// todo: just add selenium action");
        });

        step("submit form", () -> {
            step("// todo: just add selenium action");
        });

        step("verify successful autorization as test", () -> {
            step("// todo: just add selenium action");
        });
    }

    @Test
    @Description("Autogenerated test")
    @DisplayName("Page title should have header text")
    void titleTest() {
        step("Open url 'https://eburg.rabota.ru/passport/sign-up/'", () ->
            open("https://eburg.rabota.ru/passport/sign-up/"));

        step("Page title should have text 'Работа.ру – Вход'", () -> {
            String expectedTitle = "Работа.ру – Вход";
            String actualTitle = title();

            assertThat(actualTitle).isEqualTo(expectedTitle);
        });
    }

    @Test
    @Description("Autogenerated test")
    @DisplayName("Page console log should not have errors")
    void consoleShouldNotHaveErrorsTest() {
        step("Open url 'https://eburg.rabota.ru/passport/sign-up/'", () ->
            open("https://eburg.rabota.ru/passport/sign-up/"));

        step("Console logs should not contain text 'SEVERE'", () -> {
            String consoleLogs = DriverUtils.getConsoleLogs();
            String errorText = "SEVERE";

            assertThat(consoleLogs).doesNotContain(errorText);
        });
    }
}